// Generated by CoffeeScript 1.9.3

/*
 * This System provider always returns the same instance of the System. The instance
 * is created when first required and is of the type passed in to the constructor.
 */

(function() {
  'use strict';
  ash.fsm.SystemSingletonProvider = (function() {
    SystemSingletonProvider.prototype.componentType = null;

    SystemSingletonProvider.prototype.instance = null;

    SystemSingletonProvider.prototype.systemPriority = 0;


    /*
     * Constructor
     *
     * @param type The type of the single System instance
     */

    function SystemSingletonProvider(type) {
      this.componentType = type;
    }


    /*
     * Used to request a System from this provider
     *
     * @return The single instance
     */

    SystemSingletonProvider.prototype.getSystem = function() {
      if (!this.instance) {
        this.instance = new this.componentType();
      }
      return this.instance;
    };

    Object.defineProperties(SystemSingletonProvider.prototype, {

      /*
      		 * Used to compare this provider with others. Any provider that returns the same single
      		 * instance will be regarded as equivalent.
      		 *
      		 * @return The single instance
       */
      identifier: {
        get: function() {
          return this.getSystem();
        }
      },

      /*
       * The priority at which the System should be added to the Engine
       */
      priority: {
        get: function() {
          return this.systemPriority;
        },
        set: function(value) {
          return this.systemPriority = value;
        }
      }
    });

    return SystemSingletonProvider;

  })();

}).call(this);

//# sourceMappingURL=SystemSingletonProvider.js.map
