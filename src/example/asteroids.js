// Generated by CoffeeScript 1.9.0
(function() {
  'use strict';
  var AnimationSystem, AudioSystem, BulletAgeSystem, CollisionSystem, DeathThroesSystem, Engine, EntityCreator, FrameTickProvider, GameConfig, GameManager, GameState, GunControlSystem, HudSystem, KeyPoll, MotionControlSystem, MovementSystem, RenderSystem, SystemPriorities, WaitForStartSystem;

  AnimationSystem = asteroids.systems.AnimationSystem;

  AudioSystem = asteroids.systems.AudioSystem;

  BulletAgeSystem = asteroids.systems.BulletAgeSystem;

  CollisionSystem = asteroids.systems.CollisionSystem;

  DeathThroesSystem = asteroids.systems.DeathThroesSystem;

  GameManager = asteroids.systems.GameManager;

  GunControlSystem = asteroids.systems.GunControlSystem;

  HudSystem = asteroids.systems.HudSystem;

  MotionControlSystem = asteroids.systems.MotionControlSystem;

  MovementSystem = asteroids.systems.MovementSystem;

  RenderSystem = asteroids.systems.RenderSystem;

  SystemPriorities = asteroids.systems.SystemPriorities;

  WaitForStartSystem = asteroids.systems.WaitForStartSystem;

  GameState = asteroids.components.GameState;

  EntityCreator = asteroids.EntityCreator;

  GameConfig = asteroids.GameConfig;

  KeyPoll = asteroids.input.KeyPoll;

  Engine = ash.core.Engine;

  FrameTickProvider = ash.tick.FrameTickProvider;

  asteroids.Asteroids = (function() {

    /** @type {CanvasRenderingContext2D} 2D Canvas */
    Asteroids.prototype.container = null;


    /** @type {ash.core.Engine} Engine */

    Asteroids.prototype.engine = null;


    /** @type {ash.tick.FrameTickProvider} */

    Asteroids.prototype.tickProvider = null;


    /** @type {asteroids.EntityCreator} */

    Asteroids.prototype.creator = null;


    /** @type {asteroids.input.KeyPoll} */

    Asteroids.prototype.keyPoll = null;


    /** @type {asteroids.GameConfig} */

    Asteroids.prototype.config = null;


    /**
     * @constructor
     * @param {CanvasRenderingContext2D} 2D Canvas
     * @param {number} width
     * @param {number} height
     */

    function Asteroids(_at_container, width, height) {
      this.container = _at_container;
      this.prepare(width, height);
    }


    /**
     * 
     * @param {number} width
     * @param {number} height
     */

    Asteroids.prototype.prepare = function(width, height) {
      this.engine = new Engine();
      this.creator = new EntityCreator(this.engine, this.container, this.world);
      this.keyPoll = new KeyPoll(window);
      this.config = new GameConfig();
      this.config.height = height;
      this.config.width = width;
      this.engine.addSystem(new WaitForStartSystem(this.creator), SystemPriorities.preUpdate);
      this.engine.addSystem(new GameManager(this.creator, this.config), SystemPriorities.preUpdate);
      this.engine.addSystem(new MotionControlSystem(this.keyPoll), SystemPriorities.update);
      this.engine.addSystem(new GunControlSystem(this.keyPoll, this.creator), SystemPriorities.update);
      this.engine.addSystem(new BulletAgeSystem(this.creator), SystemPriorities.update);
      this.engine.addSystem(new DeathThroesSystem(this.creator), SystemPriorities.update);
      this.engine.addSystem(new MovementSystem(this.config), SystemPriorities.move);
      this.engine.addSystem(new CollisionSystem(this.creator), SystemPriorities.resolveCollisions);
      this.engine.addSystem(new AnimationSystem(), SystemPriorities.animate);
      this.engine.addSystem(new HudSystem(), SystemPriorities.animate);
      this.engine.addSystem(new RenderSystem(this.container), SystemPriorities.render);
      this.engine.addSystem(new AudioSystem(), SystemPriorities.render);
      this.creator.createWaitForClick();
      this.creator.createGame();
    };


    /**
    * Start the game play
     */

    Asteroids.prototype.start = function() {
      var stats, x, y;
      if (navigator.isCocoonJS) {
        stats = null;
      } else {
        x = Math.floor(this.config.width / 2) - 40;
        y = 0;
        stats = new window['Stats']();
        stats['setMode'](0);
        stats['domElement'].style.position = "absolute";
        stats['domElement'].style.left = x + "px";
        stats['domElement'].style.top = y + "px";
        document.body.appendChild(stats['domElement']);
      }
      this.tickProvider = new FrameTickProvider(stats);
      this.tickProvider.add(this.engine.update);
      this.tickProvider.start();
    };

    return Asteroids;

  })();

}).call(this);

//# sourceMappingURL=asteroids.js.map
