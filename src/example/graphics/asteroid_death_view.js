// Generated by CoffeeScript 1.9.0
(function() {
  'use strict';
  var Point;

  Point = asteroids.ui.Point;

  asteroids.graphics.AsteroidDeathView = (function() {

    /** @const */
    var Dot, numDots;

    numDots = 8;


    /** @type {Array<Dot>} */

    AsteroidDeathView.prototype.dots = null;


    /** @type {number} */

    AsteroidDeathView.prototype.x = 0;


    /** @type {number} */

    AsteroidDeathView.prototype.y = 0;


    /** @type {number} */

    AsteroidDeathView.prototype.width = 0;


    /** @type {number} */

    AsteroidDeathView.prototype.height = 0;


    /** @type {number} */

    AsteroidDeathView.prototype.rotation = 0;


    /** @type {CanvasRenderingContext2D} */

    AsteroidDeathView.prototype.graphic = null;


    /** @type {number} */

    AsteroidDeathView.prototype.radius = 0;


    /** @type {asteroids.ui.Point} */

    AsteroidDeathView.prototype.points = null;


    /** @type {number} */

    AsteroidDeathView.prototype.count = 0;


    /** @type {boolean} */

    AsteroidDeathView.prototype.first = true;


    /**
     * @constructor
     * @param {CanvasRenderingContext2D}
     * @param {number}
     */

    function AsteroidDeathView(_at_graphic, _at_radius) {
      this.graphic = _at_graphic;
      this.radius = _at_radius;
      this.dots = [];
    }


    /**
     * @param {number}
     */

    AsteroidDeathView.prototype.animate = function(time) {
      var dot, i, _i, _j, _len, _ref;
      if (this.first) {
        this.first = false;
        for (i = _i = 0; 0 <= numDots ? _i < numDots : _i > numDots; i = 0 <= numDots ? ++_i : --_i) {
          dot = new Dot(this.graphic, this.radius);
          this.dots.push(dot);
        }
      }
      _ref = this.dots;
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        dot = _ref[_j];
        dot.x += dot.velocity.x * time;
        dot.y += dot.velocity.y * time;
      }
      return this.draw();
    };


    /**
     * draw the view
     */

    AsteroidDeathView.prototype.draw = function() {
      var dot, _i, _len, _ref, _results;
      _ref = this.dots;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        dot = _ref[_i];
        _results.push(dot.draw(this.x, this.y));
      }
      return _results;
    };

    Dot = (function() {

      /** @type {asteroids.ui.Point} */
      Dot.prototype.velocity = null;


      /** @type {CanvasRenderingContext2D} */

      Dot.prototype.graphic = null;


      /** @type {number} */

      Dot.prototype.x1 = 0;


      /** @type {number} */

      Dot.prototype.y1 = 0;


      /** @type {number} */

      Dot.prototype.x = 0;


      /** @type {number} */

      Dot.prototype.y = 0;


      /**
      * @constructor
      * @param {CanvasRenderingContext2D}
      * @param {number}
       */

      function Dot(_at_graphic, maxDistance) {
        var angle, distance, speed;
        this.graphic = _at_graphic;
        angle = Math.random() * 2 * Math.PI;
        distance = Math.random() * maxDistance;
        this.x = Math.cos(angle) * distance;
        this.y = Math.sin(angle) * distance;
        speed = Math.random() * 10 + 10;
        this.velocity = new Point(Math.cos(angle) * speed, Math.sin(angle) * speed);
      }


      /**
      * @param {number}
      * @param {number}
       */

      Dot.prototype.draw = function(x, y) {
        var graphic;
        graphic = this.graphic;
        graphic.save();
        graphic.beginPath();
        graphic.translate(x, y);
        graphic.rotate(this.rotation);
        graphic.fillStyle = "#FFFFFF";
        graphic.arc(this.x, this.y, 2, 0, Math.PI * 2, false);
        graphic.fill();
        graphic.restore();
      };

      return Dot;

    })();

    return AsteroidDeathView;

  })();

}).call(this);

//# sourceMappingURL=asteroid_death_view.js.map
