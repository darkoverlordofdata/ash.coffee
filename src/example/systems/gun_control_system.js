// Generated by CoffeeScript 1.9.3
(function() {
  'use strict';
  var GunControlNode,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  GunControlNode = asteroids.nodes.GunControlNode;

  asteroids.systems.GunControlSystem = (function(superClass) {
    extend(GunControlSystem, superClass);

    GunControlSystem.prototype.keyPoll = null;

    GunControlSystem.prototype.creator = null;

    function GunControlSystem(keyPoll, creator) {
      this.keyPoll = keyPoll;
      this.creator = creator;
      this.updateNode = bind(this.updateNode, this);
      GunControlSystem.__super__.constructor.call(this, GunControlNode, this.updateNode);
    }

    GunControlSystem.prototype.updateNode = function(node, time) {
      var control, gun, position;
      control = node.control;
      position = node.position;
      gun = node.gun;
      gun.shooting = this.keyPoll.isDown(control.trigger);
      gun.timeSinceLastShot += time;
      if (gun.shooting && gun.timeSinceLastShot >= gun.minimumShotInterval) {
        this.creator.createUserBullet(gun, position);
        gun.timeSinceLastShot = 0;
      }
    };

    return GunControlSystem;

  })(ash.tools.ListIteratingSystem);

}).call(this);

//# sourceMappingURL=gun_control_system.js.map
