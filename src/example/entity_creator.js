// Generated by CoffeeScript 1.9.0
(function() {
  'use strict';
  var Animation, Asteroid, AsteroidDeathView, AsteroidView, Audio, Bullet, BulletView, Collision, DeathThroes, Display, Entity, EntityStateMachine, GameState, Gun, GunControls, Hud, HudView, Motion, MotionControls, Position, Spaceship, SpaceshipDeathView, SpaceshipView, WaitForStart, WaitForStartView;

  WaitForStartView = asteroids.graphics.WaitForStartView;

  Entity = ash.core.Entity;

  EntityStateMachine = ash.fsm.EntityStateMachine;

  Animation = asteroids.components.Animation;

  Asteroid = asteroids.components.Asteroid;

  Audio = asteroids.components.Audio;

  Bullet = asteroids.components.Bullet;

  Collision = asteroids.components.Collision;

  DeathThroes = asteroids.components.DeathThroes;

  Display = asteroids.components.Display;

  GameState = asteroids.components.GameState;

  Gun = asteroids.components.Gun;

  GunControls = asteroids.components.GunControls;

  Hud = asteroids.components.Hud;

  Motion = asteroids.components.Motion;

  MotionControls = asteroids.components.MotionControls;

  Position = asteroids.components.Position;

  Spaceship = asteroids.components.Spaceship;

  WaitForStart = asteroids.components.WaitForStart;

  AsteroidDeathView = asteroids.graphics.AsteroidDeathView;

  AsteroidView = asteroids.graphics.AsteroidView;

  BulletView = asteroids.graphics.BulletView;

  HudView = asteroids.graphics.HudView;

  SpaceshipDeathView = asteroids.graphics.SpaceshipDeathView;

  SpaceshipView = asteroids.graphics.SpaceshipView;

  asteroids.EntityCreator = (function() {
    var KEY_LEFT, KEY_RIGHT, KEY_UP, KEY_Z;

    KEY_LEFT = 37;

    KEY_UP = 38;

    KEY_RIGHT = 39;

    KEY_Z = 90;

    EntityCreator.prototype.engine = null;

    EntityCreator.prototype.waitEntity = null;

    EntityCreator.prototype.graphic = null;

    function EntityCreator(_at_engine, _at_graphic, _at_world) {
      this.engine = _at_engine;
      this.graphic = _at_graphic;
      this.world = _at_world;
    }

    EntityCreator.prototype.destroyEntity = function(entity) {
      this.engine.removeEntity(entity);
    };


    /*
     * Game State
     */

    EntityCreator.prototype.createGame = function() {
      var gameEntity, hud;
      hud = new HudView(this.graphic);
      gameEntity = new Entity('game').add(new GameState()).add(new Hud(hud)).add(new Display(hud)).add(new Position(0, 0, 0, 0));
      this.engine.addEntity(gameEntity);
      return gameEntity;
    };


    /*
     * Start...
     */

    EntityCreator.prototype.createWaitForClick = function() {
      var waitView;
      if (!this.waitEntity) {
        waitView = new WaitForStartView(this.graphic);
        this.waitEntity = new Entity('wait').add(new WaitForStart(waitView)).add(new Display(waitView)).add(new Position(0, 0, 0, 0));
      }
      this.waitEntity.get(WaitForStart).startGame = false;
      this.engine.addEntity(this.waitEntity);
      return this.waitEntity;
    };


    /*
     * Create an Asteroid with FSM Animation
     */

    EntityCreator.prototype.createAsteroid = function(radius, x, y) {
      var asteroid, deathView, fsm;
      asteroid = new Entity();
      fsm = new EntityStateMachine(asteroid);
      fsm.createState('alive').add(Motion).withInstance(new Motion((Math.random() - 0.5) * 4 * (50 - radius), (Math.random() - 0.5) * 4 * (50 - radius), Math.random() * 2 - 1, 0)).add(Collision).withInstance(new Collision(radius)).add(Display).withInstance(new Display(new AsteroidView(this.graphic, radius)));
      deathView = new AsteroidDeathView(this.graphic, radius);
      fsm.createState('destroyed').add(DeathThroes).withInstance(new DeathThroes(3)).add(Display).withInstance(new Display(deathView)).add(Animation).withInstance(new Animation(deathView));
      asteroid.add(new Asteroid(fsm)).add(new Position(x, y, 0)).add(new Audio());
      fsm.changeState('alive');
      this.engine.addEntity(asteroid);
      return asteroid;
    };


    /*
     * Create Player Spaceship with FSM Animation
     */

    EntityCreator.prototype.createSpaceship = function() {
      var deathView, fsm, spaceship;
      spaceship = new Entity();
      fsm = new EntityStateMachine(spaceship);
      fsm.createState('playing').add(Motion).withInstance(new Motion(0, 0, 0, 15)).add(MotionControls).withInstance(new MotionControls(KEY_LEFT, KEY_RIGHT, KEY_UP, 100, 3)).add(Gun).withInstance(new Gun(8, 0, 0.3, 2)).add(GunControls).withInstance(new GunControls(KEY_Z)).add(Collision).withInstance(new Collision(9)).add(Display).withInstance(new Display(new SpaceshipView(this.graphic)));
      deathView = new SpaceshipDeathView(this.graphic);
      fsm.createState('destroyed').add(DeathThroes).withInstance(new DeathThroes(5)).add(Display).withInstance(new Display(deathView)).add(Animation).withInstance(new Animation(deathView));
      spaceship.add(new Spaceship(fsm)).add(new Position(300, 225, 0)).add(new Audio());
      fsm.changeState('playing');
      this.engine.addEntity(spaceship);
      return spaceship;
    };


    /*
     * Create a Bullet
     */

    EntityCreator.prototype.createUserBullet = function(gun, parentPosition) {
      var bullet, cos, sin, x, y;
      cos = Math.cos(parentPosition.rotation);
      sin = Math.sin(parentPosition.rotation);
      x = cos * gun.offsetFromParent.x - sin * gun.offsetFromParent.y + parentPosition.position.x;
      y = sin * gun.offsetFromParent.x + cos * gun.offsetFromParent.y + parentPosition.position.y;
      bullet = new Entity().add(new Bullet(gun.bulletLifetime)).add(new Position(x, y, 0)).add(new Collision(0)).add(new Motion(cos * 150, sin * 150, 0, 0)).add(new Display(new BulletView(this.graphic)));
      this.engine.addEntity(bullet);
      return bullet;
    };

    return EntityCreator;

  })();

}).call(this);

//# sourceMappingURL=entity_creator.js.map
